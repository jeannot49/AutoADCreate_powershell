Structure de base
Création de l'OU principale (ex : Agence)
Création d'un premier niveau d'arborescence
Création d'un autre niveau d'arborescence sous les OU créées précédemment 
Création des groupes appropriés

Créer des groupes de sécurité
	- À la main
		groupcategory = security
		groupscope = choix entre 3
		path = en fonction de groupscope, placement dans l'une des OU sous l'OU "Groupes"
	- Basé sur un CSV
		Importer le CSV
		Demander à l'utilisateur entre GroupScope DomainLocal, Global ou Universal

Créer des groupes de domaine local
	- Basé sur un nom de partage
		Création de DL_<domaine>_<partage>_CT
		Création de DL_<domaine>_<partage>_M
		Création de DL_<domaine>_<partage>_L
		Création de DL_<domaine>_<partage>_R

Créer des partages et les DL
	Demander le nom du partage
	Créer les 4 DL y correspondant
	Créer les groupes, dans la bonne UO
	Prévenir l'utilisateur de modifier les ACL sur le serveur de fichiers

Créer des modèles d'utilisateurs
	En créer un ou plusieurs via CSV ?
	- A la main
		Demander les informations à l'utilisateur
			. Nom																: mod.<nom>.<OU de service>
			. Mot de passe etc.													: pas de mot de passe
			. Groupe d'appartenance												: utilise une fonction d'ajout à des groupes
				. lister les groupes du modèle associé et les ajouter
			. Attributs département, job										: maximum d'attributs
		Si l'utilisateur est placé dans l'OU, il sera automatiquement ajouté au
		  groupe correspondant
		
	- Via CSV
		Import du fichier
		Création grâce à l'extraction des variables	

Création d'utilisateurs
	- A la main
		Demander les informations à l'utilisateur
		Le laisser choisir l'OU
	- Via CSV

#######################################################################################################################################
Prioritaire :
- Création de groupes du même nom que les OU dans l'OU "Groupes globaux" <-- Création d'une VM WS2016

- Intégrer des utilisateurs à des groupes et des groupes dans des groupes, le faire via le fichier csv d'ajout des utilisateurs si possible

- Créer une fonction que vérifie l'existence d'un utilisateur

#######################################################################################################################################
À faire : 
- Créer un Excel plus "convivial" pour la Création des OU qui génère un .csv compatible avec le script
CreateOUStructure

- Création de groupe automatique en fonction du nom des OU dans l'OU Utilisateurs

- Proposer à l'utilisateur de créer des groupes, ou non, mais le prévenir que l'absence de groupe pourra provoquer des erreurs si l'on souhaite
ajouter des utilisateurs dans ces groupes

- Vérifier que l'utilisateur a bien rempli tous les fichiers .csv

- Vérifier que le mot de passe n'est plus stocké dans une variable après la fin du script

- Réaliser un tableau Excel facilitant la construction des tous les attributs sans erreur

- Réaliser un tableau Excel facilitant la construction des tous les attributs sans erreur
	. Concatener afin d'avoir un SamAccountName dans Excel : =MINUSCULE(CONCATENER(GAUCHE(B2;1);C2))

- Prévenir des Timeout afin que l'utilisateur n'aie pas l'impression d'un plantage

- Procédure complète dans un fichier README_DETAILED.txt

- S'adapter aux niveaux d'arborescence du domaine (plus de 3 niveaux) DOMAINE > Agence > Utilisateurs etc...

- Pouvoir créer une arborescence similaire (ex : Intérimaires, Membres, Directeurs) de manière répétitives dans une OU

- Vérifier la version de Powershell : tests à réaliser sur WS2016, WS2012, 2012R2, 2008

- Tant que le script n'est pas exécuté, continuer le "Transcript" (logs)

- Refaire les menus principaux dans étapes 4 & 5

- Vérifier qu'un utilisateur n'existe pas avant de l'ajouter

- Demander à l'utilisateur le nombre d'utilisateurs/groupes à ajouter à la main, les inclure dans un tableau et tout ajouter d'un coup dans l'AD

- Proposer des OU de base (sous l'OU racine) personnalisées. Les variables devront alors être réutilisables dans les fonctions

- Lors de la fonction de création d'utilisateur CreateUser, afficher les OU parentes disponibles

- Afficher les valeurs d'un tableau (des noms d'OU par exemple) et les afficher sous forme sélectionnable (1, 2, 3 etc.)

- Renommer toutes les variables et les paramètres de fonctions de façon cohérente

#######################################################################################################################################
Peut être utile :
- Lister les groupes dans 'Global' et 'Universel' :
    . (Get-ADGroup -Filter {Name -like "G_*"}).name ; (Get-ADGroup -Filter {name -like "U_*"}).name

- Lister les OU sous une OU :
	. (Get-ADOrganizationalUnit -Filter * | Where-Object {$_.DistinguishedName -like "OU=*,OU=Utilisateurs,OU=Agence,DC=guitton,DC=fr"}).Name